type EventCategory {
  # Example field (placeholder)
  exampleField: Int
}

input CreateEventCategoryInput {
  # Example field (placeholder)
  exampleField: Int
}

input UpdateEventCategoryInput {
  id: Int!
}

type Query {
  eventCategory: [EventCategory]!
  eventCategory(id: Int!): EventCategory
}

type Mutation {
  createEventCategory(createEventCategoryInput: CreateEventCategoryInput!): EventCategory!
  updateEventCategory(updateEventCategoryInput: UpdateEventCategoryInput!): EventCategory!
  removeEventCategory(id: Int!): EventCategory
}
type EventCategory {
  id: ID!
  title: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  createdBy: User!
  updatedBy: User
  events: [EventCategory!]!
}

input CreateOneEventCategoryInput {
  title: String!
}

type Mutation {
  createOneEventCategory(input: CreateOneEventCategoryInput!): EventCategory!
}
input CreateManyEventCategoriesInput {
  categories: [CreateOneEventCategoryInput!]!
}

type Mutation {
  createManyEventCategories(input: CreateManyEventCategoriesInput!): [EventCategory!]!
}
input UpdateOneEventCategoryInput {
  id: ID!
  title: String
}

type Mutation {
  updateOneEventCategory(input: UpdateOneEventCategoryInput!): EventCategory!
}
